<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Product;
use AppBundle\Entity\ProductViews;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\Mapping;
use Doctrine\ORM\OptimisticLockException;

/**
 * ProductViewsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductViewsRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * CategoryRepository constructor.
     * @param EntityManagerInterface $em
     * @param Mapping\ClassMetadata $class
     */
    public function __construct(EntityManagerInterface $em, Mapping\ClassMetadata $class = null)
    {
        parent::__construct($em, $class == null ? new Mapping\ClassMetadata(ProductViews::class) : $class);
    }

    /**
     * @param ProductViews $views
     * @return bool
     */
    public function insert(ProductViews $views): bool
    {
        try {
            $this->_em->persist($views);
            $this->_em->flush();

            return true;
        } catch (OptimisticLockException $e) {
            return false;
        }
    }

    public function getLastViewByIpAndProduct(string $ipAddress, int $productId) {
        return $this->_em->getRepository(ProductViews::class)
            ->findBy(['ipAddress' => $ipAddress, 'product' => $productId], ['date' => 'desc'], 1);
    }
}
