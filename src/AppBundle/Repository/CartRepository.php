<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Cart;
use AppBundle\Entity\User;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\Mapping;
use Doctrine\ORM\OptimisticLockException;
use Doctrine\ORM\ORMException;
use Doctrine\ORM\TransactionRequiredException;

/**
 * CartRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CartRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * CartRepository constructor.
     * @param EntityManagerInterface $em
     * @param Mapping\ClassMetadata|null $class
     */
    public function __construct(EntityManagerInterface $em, Mapping\ClassMetadata $class = null)
    {
        parent::__construct($em, $class == null ? new Mapping\ClassMetadata(Cart::class) : $class);
    }

    /**
     * @param User $user
     * @return Cart|object|null
     */
    public function findCartByUser(User $user)
    {
        return $this->findOneBy(['user' => $user]);
    }

    /**
     * @param Cart $cart
     * @return bool
     */
    public function insertCart(Cart $cart): bool
    {
        try {
            $this->_em->persist($cart);
            $this->_em->flush($cart);

            return true;
        } catch (OptimisticLockException $e) {
            return false;
        }
    }

}
